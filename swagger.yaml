openapi: 3.0.0
info:
  title: Voucher Pool API
  description: API for managing vouchers and special offers
  version: 1.0.0


servers:
    - url: http://localhost:3000
      description: Local Development
    - url: https://api.voucherpool.com
      description: Production

paths:
  /vouchers:
    get:
      summary: Get vouchers by email
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
          description: Customer email address
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
            minimum: 1
          description: Number of items per page
      responses:
        200:
          description: List of vouchers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voucher'
        400:
          description: Email is required

  /vouchers/validate:
    post:
      summary: Validate a voucher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateVoucherDto'
      responses:
        200:
          description: Voucher discount percentage
          content:
            application/json:
              schema:
                type: number
        400:
          description: Invalid voucher

  /vouchers/generate:
    post:
      summary: Generate vouchers for all customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVoucherDto'
      responses:
        201:
          description: Vouchers generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Vouchers generated successfully'
        400:
          description: Special offer not found

components:
  schemas:
    CreateVoucherDto:
      type: object
      required:
        - specialOfferId
        - expirationDate
      properties:
        specialOfferId:
          type: integer
          description: ID of the special offer
        expirationDate:
          type: string
          format: date-time
          description: Expiration date of the voucher

    ValidateVoucherDto:
      type: object
      required:
        - voucherCode
        - email
      properties:
        voucherCode:
          type: string
          description: Unique voucher code
        email:
          type: string
          format: email
          description: Customer email address

    Voucher:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        expirationDate:
          type: string
          format: date-time
        usedAt:
          type: string
          format: date-time
          nullable: true
        customerId:
          type: integer
        specialOfferId:
          type: integer

    Customer:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        name:
          type: string

    SpecialOffer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        percentage:
          type: integer
          minimum: 1
          maximum: 100
